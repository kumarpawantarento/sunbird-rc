{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "properties": {
    "Student": {
      "$ref": "#/definitions/Student"
    }
  },
  "required": [
    "Student"
  ],
  "title":"Student",
  "definitions": {
    "Student": {
      "$id": "#/properties/Student",
      "type": "object",
      "title": "The Student Schema",
      "required": [

      ],
      "properties": {
        "identityDetails": {
          "type": "object",
          "title": "Identity Details",
          "description": "Identity Details",
          "required": [],
          "properties": {
            "fullName": {
              "$id": "#/properties/fullName",
              "type": "string",
              "title": "Full name"
            },
            "gender": {
              "$id": "#/properties/gender",
              "type": "string",
              "enum": [
                "Male",
                "Female",
                "Other"
              ],
              "title": "Gender"
            },
            "dob": {
              "$id": "#/properties/dob",
              "type": "string",
              "format": "date",
              "title": "DOB"
            },
            "identityHolder": {
              "type": "object",
              "properties": {
                "type": {
                  "$id": "#/properties/type",
                  "type": "string",
                  "$comment": "Nationality",
                  "title": "ID Type",
                  "enum": [
                    "AADHAR",
                    "PAN",
                    "LICENSE",
                    "OTHER"
                  ]
                },
                "value": {
                  "$id": "#/properties/value",
                  "type": "string",
                  "$comment": "Nationality",
                  "title": "ID Value"
                }
              }
            }
          }
        },
        "contactDetails": {
          "type": "object",
          "title": "Contact Details",
          "description": "Contact Details",
          "required": [],
          "properties": {
            "email": {
              "$id": "#/properties/email",
              "type": "string",
              "title": "Email"
            },
            "mobile": {
              "$id": "#/properties/mobile",
              "type": "string",
              "title": "Mobile"
            },
            "address": {
              "$id": "#/properties/address",
              "$ref": "#/definitions/Address",
              "title": "Address"
            }
          }
        }
      }
    }
  },
  "_osConfig": {
    "osComment": ["This section contains the OpenSABER specific configuration information",
      "privateFields: Optional; list of field names to be encrypted and stored in database",
      "signedFields: Optional; list of field names that must be pre-signed",
      "indexFields: Optional; list of field names used for creating index. Enclose within braces to indicate it is a composite index. In this definition, (serialNum, studentCode) is a composite index and studentName is a single column index.",
      "uniqueIndexFields: Optional; list of field names used for creating unique index. Field names must be different from index field name",
      "systemFields: Optional; list of fields names used for system standard information like created, updated timestamps and userid"],

    "privateFields": [
      "$.identityDetails.dob",
      "$.identityDetails.identityType",
      "$.identityDetails.identityValue"
    ],
    "internalFields": [
      "$.contactDetails.email",
      "$.contactDetails.mobile",
      "$.contactDetails.address.plot",
      "$.contactDetails.address.street",
      "$.contactDetails.address.landmark",
      "$.contactDetails.address.locality"
    ],
    "signedFields": [],
    "indexFields": ["studentName"],
    "uniqueIndexFields": ["identityValue"],
    "systemFields": [
      "_osCreatedAt",
      "_osUpdatedAt",
      "_osCreatedBy",
      "_osUpdatedBy",
      "_osAttestedData",
      "_osClaimId",
      "_osState"
    ],
    "attestationAttributes": [
      "educationDetails",
      "nationalIdentifier"
    ],
    "attestationPolicies": [
      {
        "name": "attestationEducationDetails",
        "properties": ["educationDetails/[]"],
        "paths": ["$.educationDetails[?(@.osid == 'PROPERTY_ID')]['instituteName', 'program', 'graduationYear', 'marks']", "$.identityDetails['fullName']"],
        "type": "MANUAL",
        "attestorEntity": "Teacher",
        "attestorPlugin": "did:internal:Claim?entity=Teacher",
        "conditions": "(ATTESTOR#$.experience.[*].instituteOSID#.contains(REQUESTER#$.instituteOSID#) && ATTESTOR#$.experience[?(@.instituteOSID == REQUESTER#$.instituteOSID#)]['_osState']#.contains('PUBLISHED'))"
      }
    ],
    "autoAttestationPolicies": [
      {
        "parentProperty": "identityDetails",
        "property": "identityHolder",
        "nodeRef": "$.identityDetails.identityHolder",
        "valuePath": "$.identityDetails.identityHolder.value",
        "typePath": "$.identityDetails.identityHolder.type"
      }
    ],
    "subjectJsonPath": "mobile",
    "ownershipAttributes": [
      {
        "email": "/contactDetails/email",
        "mobile": "/contactDetails/mobile",
        "userId": "/contactDetails/mobile"
      }
    ]
  }
}